<?xml version="1.0" encoding="UTF-8"?>
<!--
  -*- rnc -*-
  RELAX NG Compact Syntax Grammar for 
  ATOM encoding and foreign elements as defined in OGC 10-032 
  for the time extension   
  
  OGC OpenSearch Geo and Time Extensions 1.0 is an OGC Standard.
  Copyright (c) 2014 Open Geospatial Consortium.
  To obtain additional rights of use, visit http://www.opengeospatial.org/legal/ .
  
  Version: 1.0.1
  
-->
<grammar xmlns:s="http://purl.oclc.org/dsdl/schematron" xmlns:os="http://a9.com/-/spec/opensearch/1.1/" xmlns:time="http://a9.com/-/opensearch/extensions/time/1.0/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <!-- Define date time interval -->
  <define name="datetimeInterval">
    <data type="string">
      <param name="pattern">\s*[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(\.[0-9]+)?(Z|[\+\-][0-9]{2}:[0-9]{2})?(/[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}(\.[0-9]+)?(Z|[\+\-][0-9]{2}:[0-9]{2})|)\s*</param>
    </data>
  </define>
  <!-- Redefine atom:entry to include new OGC10-032 elements -->
  <define name="atomEntryConstruct" combine="interleave">
    <optional>
      <element name="dc:date">
        <ref name="datetimeInterval"/>
      </element>
    </optional>
  </define>
  <include href="time.rng"/>
  <!--
    Replacing definitions on RFC4287 plus OpenSearch
    relative path schemas/opensearch/1.1/ folder
  -->
  <include href="osatom.rng">
    <define name="undefinedAttribute">
      <attribute>
        <anyName>
          <except>
            <name>xml:base</name>
            <name>xml:lang</name>
            <nsName ns=""/>
            <nsName ns="http://a9.com/-/opensearch/extensions/time/1.0/"/>
          </except>
        </anyName>
      </attribute>
    </define>
    <!-- Redefine the Simple Extension to exclude os and time extension elements -->
    <define name="simpleExtensionElement">
      <element>
        <anyName>
          <except>
            <nsName ns="http://www.w3.org/2005/Atom"/>
            <name>dc:date</name>
            <nsName ns="http://a9.com/-/spec/opensearch/1.1/"/>
          </except>
        </anyName>
        <text/>
      </element>
    </define>
    <!-- Redefine the Structured Extension to exclude os and time extension elements -->
    <define name="structuredExtensionElement">
      <element>
        <anyName>
          <except>
            <nsName ns="http://www.w3.org/2005/Atom"/>
            <name>dc:date</name>
            <nsName ns="http://a9.com/-/spec/opensearch/1.1/"/>
          </except>
        </anyName>
        <choice>
          <group>
            <oneOrMore>
              <attribute>
                <anyName/>
              </attribute>
            </oneOrMore>
            <zeroOrMore>
              <choice>
                <text/>
                <ref name="anyElement"/>
              </choice>
            </zeroOrMore>
          </group>
          <group>
            <zeroOrMore>
              <attribute>
                <anyName/>
              </attribute>
            </zeroOrMore>
            <group>
              <optional>
                <text/>
              </optional>
              <oneOrMore>
                <ref name="anyElement"/>
              </oneOrMore>
              <zeroOrMore>
                <choice>
                  <text/>
                  <ref name="anyElement"/>
                </choice>
              </zeroOrMore>
            </group>
          </group>
        </choice>
      </element>
    </define>
    <!-- Redefine Atom rules    -->
    <define name="atomFeed">
      <element name="atom:feed">
        <ref name="atomFeedConstruct"/>
      </element>
    </define>
    <define name="atomEntry">
      <element name="atom:entry">
        <s:pattern name="Check for HTML Content">
          <s:rule context="atom:entry">
            <s:assert test="atom:content">An atom:entry must have one atom:content MUST have content element in a format understandable by generic Atom readers ( @type equal to 'html' is recommended)</s:assert>
          </s:rule>
        </s:pattern>
        <ref name="atomEntryConstruct"/>
      </element>
    </define>
  </include>
</grammar>
<!-- EOF -->
