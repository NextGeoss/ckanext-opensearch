# Default parameters for collection search (step one of two-step search).
# Format:
# [ckan_name]
# title = "Title or description of the parameter"
# os_name = "The name of the parameter in a given OpenSearch specification"
# namespace = "The XML namespace that the parameter belongs to. The full namespace must be defined in the namespaces document."
# minimum = "The minimum number (integer) of instances of the parameter. 0 means that the parameter is optional."
# maximum = "The maximum number (integer) of instances of the parameter. In most cases, this value should be 1."
# min_inclusive = The (optional) minimum value (integer) that this parameter can have. For instance, the value of rows must be greater than 0, so min_inclusive is 1.
# max_exclusive = The (optional) maximum value (integer) that this parameter can have. For instance, the value of rows can't be greater than 1000, so max_exclusive is 1001.
# validators = [An optional array listing the names of any validation functions from validators.py that should be applied to the parameter before executing a search. Validators are applied in the order they are listed here. Note that all parameters are subjected to two default validations regardless of whether this array is included: the number of instances of each parameter (defined by minimum and maximum above) is validated and, if min_inclusive/max_exclusive are defined, the parameter's value is also validated against those values.]
# converters = [An optional array listing the converter functions from converters.py that should be applied to the parameter before executing a search. If no covnerter is included, the parameter value is just passed directly to package_search. Some OpenSearch parameters are formatted just like CKAN parameters, so no conversion is necessary. In other cases, like date ranges, the value must be converted first.]
#   [[ckan_name.options]] (create an element in a list of parameter options/examples)
#   value = "An example of a value that the user can submit for this parameter"
#   label = "A brief explanation of what this value represents, e.g., 'An example start time' or 'The bounding box of London'"

[q]
title = "Search terms in CKAN/Solr syntax"
os_name = "searchTerms"
namespace = "opensearch"
minimum = 0
maximum = 1

[rows]
title = "Max. results per page"
os_name = "maxResults"
namespace = "opensearch"
minimum = 0
maximum = 1
min_inclusive = 1
max_exclusive = 1001

[page]
title = "Page number"
os_name = "startPage"
namespace = "opensearch"
minimum = 0
maximum = 1
min_inclusive = 1
max_exclusive = 100000000

[ext_bbox]
title = "Bounding box that intersects with results"
os_name = "box"
namespace = "geo"
minimum = 0
maximum = 1
validators = ["valid_bbox"]
  [[ext_bbox.options]]
  value = "-0.489,51.28,0.236,51.686"
  label = "Bounding Box of Greater London"

[identifier]
title = "UID of a specific product"
os_name = "uid"
namespace = "geo"
minimum = 0
maximum = 1

[timerange_start]
title = "Beginning of time range that results should cover"
os_name = "start"
namespace = "time"
minimum = 0
maximum = 1
validators = ["valid_datetime_string"]
converters = ["solr_timerange_start"]
  [[timerange_start.options]]
  value = "2014-04-03T:00:00:00"
  label = "Example start time"
 
[timerange_end]
title = "End of time range that results should cover"
os_name = "end"
namespace = "time"
minimum = 0
maximum = 1
validators = ["valid_datetime_string"]
converters = ["solr_timerange_stop"]
  [[timerange_end.options]]
  value = "2017-12-21T:00:00:00"
  label = "Example end time"

[metadata_modified]
title = "Date range within which metadata was modified"
os_name = "modificationDate"
namespace = "eo"
minimum = 0
maximum = 1
validators = ["valid_date_range"]
converters = ["range_array_to_solr_range", "add_timezone"]
  [[metadata_modified.options]]
  value = "[2017-11-05T00:00:00,2017-11-05T12:00:00]"
  label = "Example modification date range"

[spatial_geom]
title = "Arbitrary WKT shape that intersects with results"
os_name = "geometry"
namespace = "geo"
minimum = 0
maximum = 1
validators = ["valid_geometry"]
converters = ["intersects_spatial"]
  [[spatial_geom.options]]
  value = "POLYGON((-6.284 24.727,-4.834 24.867,0.879 20.982,1.077 20.592,1.912 20.015,2.197 20.118,2.966 19.58,2.944 18.958,3.34 18.813,4.043 18.854,4.021 16.426,3.384 15.581,-0.747 15.242,-3.01 14.179,-3.56 13.411,-3.955 13.646,-4.57 13.261,-4.702 12.426,-5.669 11.867,-5.647 10.661,-6.196 10.92,-6.812 10.833,-7.031 10.445,-7.625 10.682,-7.866 10.509,-8.086 11.394,-9.009 12.726,-10.195 12.404,-11.096 12.469,-11.316 13.518,-11.909 14.499,-11.448 15.178,-10.833 14.796,-10.173 15.263,-5.295 15.305,-5.076 16.32,-5.427 16.784,-6.284 24.727))"
  label = "Mali"

[collection_id]
title = "ID of collection to search within"
os_name = "collection_id"
namespace = "custom"
minimum = 0
maximum = 1
  [[collection_id.options]]
  value = "SENTINEL3_SLSTR_L2_LST"
  label = "Sentinel-3 SLSTR Level-2 Land Surface Temperature Collection"
  [[collection_id.options]]
  value = "METNO-GLO-SEAICE_CONC-SOUTH-L4-NRT-OBS"
  label = "Antarctic Ocean Observed Sea Ice Concentration"